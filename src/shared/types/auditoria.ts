// Tipos para sistema de auditoria/logs

export type TipoAcaoAuditoria = 
  | 'CRIAR_FORMULARIO'
  | 'EDITAR_FORMULARIO' 
  | 'EXCLUIR_FORMULARIO'
  | 'FINALIZAR_FORMULARIO'
  | 'REABRIR_FORMULARIO';

export type TipoFormularioAuditoria = 'CTO' | 'PON' | 'LINK';

export interface UsuarioAuditoria {
  uid: string;
  email: string;
  displayName?: string | null;
}

export interface DetalhesAcao {
  formularioId?: string;
  codigoOS?: string;
  tipoFormulario?: TipoFormularioAuditoria;
  statusAnterior?: string;
  statusNovo?: string;
  dadosAlterados?: any;
  observacoes?: string;
}

export interface LogAuditoria {
  id: string;
  acao: TipoAcaoAuditoria;
  usuario: UsuarioAuditoria;
  timestamp: string;
  detalhes: DetalhesAcao;
  ipAddress?: string;
  userAgent?: string;
}

// Fun√ß√£o para criar um novo log de auditoria
export const criarLogAuditoria = (
  acao: TipoAcaoAuditoria,
  usuario: UsuarioAuditoria,
  detalhes: DetalhesAcao
): LogAuditoria => {
  const id = Math.random().toString(36).substring(2) + Date.now().toString(36);
  
  return {
    id,
    acao,
    usuario,
    timestamp: new Date().toISOString(),
    detalhes,
    ipAddress: 'N/A', // Em produ√ß√£o, seria obtido do servidor
    userAgent: navigator.userAgent
  };
};

// Fun√ß√£o para obter √≠cone da a√ß√£o
export const obterIconeAcao = (acao: TipoAcaoAuditoria): string => {
  switch (acao) {
    case 'CRIAR_FORMULARIO':
      return '‚ûï';
    case 'EDITAR_FORMULARIO':
      return '‚úèÔ∏è';
    case 'EXCLUIR_FORMULARIO':
      return 'üóëÔ∏è';
    case 'FINALIZAR_FORMULARIO':
      return '‚úÖ';
    case 'REABRIR_FORMULARIO':
      return 'üîÑ';
    default:
      return 'üìù';
  }
};

// Fun√ß√£o para obter cor da a√ß√£o
export const obterCorAcao = (acao: TipoAcaoAuditoria): string => {
  switch (acao) {
    case 'CRIAR_FORMULARIO':
      return '#28a745';
    case 'EDITAR_FORMULARIO':
      return '#17a2b8';
    case 'EXCLUIR_FORMULARIO':
      return '#dc3545';
    case 'FINALIZAR_FORMULARIO':
      return '#28a745';
    case 'REABRIR_FORMULARIO':
      return '#ffc107';
    default:
      return '#6c757d';
  }
};

// Fun√ß√£o para obter descri√ß√£o amig√°vel da a√ß√£o
export const obterDescricaoAcao = (log: LogAuditoria): string => {
  const { acao, detalhes } = log;
  const codigo = detalhes.codigoOS || 'Sem c√≥digo';
  const tipo = detalhes.tipoFormulario || '';
  
  switch (acao) {
    case 'CRIAR_FORMULARIO':
      return `Criou formul√°rio ${tipo}: ${codigo}`;
    case 'EDITAR_FORMULARIO':
      return `Editou formul√°rio ${tipo}: ${codigo}`;
    case 'EXCLUIR_FORMULARIO':
      return `Excluiu formul√°rio ${tipo}: ${codigo}`;
    case 'FINALIZAR_FORMULARIO':
      return `Finalizou formul√°rio ${tipo}: ${codigo}`;
    case 'REABRIR_FORMULARIO':
      return `Reabriu formul√°rio ${tipo}: ${codigo}`;
    default:
      return `A√ß√£o desconhecida em: ${codigo}`;
  }
};
